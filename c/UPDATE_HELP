#
# $Id$
#

Between RTEMS 3.1.0 and 3.2.0, every RTEMS defined symbol made visible
was renamed.  This document describes the change and the tools provided
to assist you in updating your RTEMS 3.1.0 application.  

[NOTE:  This change was not included in snapshots prior to 3.1.15.]

DESCRIPTION OF NAME CHANGES:
============================

The primary change was the addition of the prefix "rtems_" or "RTEMS_" to
EVERY user visible RTEMS provided constant and routine.  The primary 
factor in the decision to make such a sweeping change was conflicts 
between the the RTEMS and POSIX API's.  


TO UPDATE YOUR APPLICATION:
===========================

The update script requires that Perl be installed on your computer.
It has only been tested with Perl 5.x.

After RTEMS has been built, in the directory "$r/<BSP>/update_tools", will
be a set of tools to aid in making the application source changes necessary 
to address (hopefully) all of the name changes in the RTEMS API between 
releases 3.1.0 and 3.2.0.

The update shell script is the only executable which is invoked by the
user directly.  The word-replace Perl script is invoked by the update
shell script.

WARNING: These tools modify the files IN PLACE!!! Backup your
         source before using these tools.

To udpate your application, change directories to the top of your application
source tree and execute the update script.  It should be something similar
to the following:

cd MY_APP
$r/<BSP>/update-tools/update

The update script will ask if you have backed up your source code before
beginning the update process.  While operating on files, it will print
the name of each file and a dot for each change made to the source file.  

NOTE: These scripts do not attempt to address changes in calling 
      sequences.  After the script has run, you will need to update 
      calls to rtems_clock_get(), rtems_timer_fire_after(), and
      rtems_timer_fire_when() by hand.
